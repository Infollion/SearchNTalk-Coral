{
  "name": "grunt-promise-q",
  "description": "Write asynchronous grunt tasks with Q promises.",
  "version": "0.1.1",
  "homepage": "https://github.com/phadej/grunt-promise-q",
  "author": {
    "name": "Oleg Grenrus",
    "email": "oleg.grenrus@iki.fi",
    "url": "http://oleg.fi"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/phadej/grunt-promise-q.git"
  },
  "bugs": {
    "url": "https://github.com/phadej/grunt-promise-q/issues"
  },
  "licenses": [
    {
      "type": "BSD3",
      "url": "https://github.com/phadej/grunt-promise-q/blob/master/LICENSE"
    }
  ],
  "main": "lib/grunt-promise-q",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "q": "~1.0.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.3.0",
    "grunt": "~0.4.1",
    "q-io": "~1.10.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "grunt",
    "async",
    "promise",
    "q"
  ],
  "readme": "# grunt-promise-q [![Build Status](https://secure.travis-ci.org/phadej/grunt-promise-q.png?branch=master)](http://travis-ci.org/phadej/grunt-promise-q)\n\n\n> Write asynchronous grunt tasks with Q promises.\n\n## Getting Started\n\nThis package requires Grunt `~0.4.1` (the only tested).\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-promise-q --save-dev\n```\n\nOnce the plugin has been installed, it may be used to define asynchronous tasks:\n\n```js\nvar q = require(\"q\");\nvar asyncTask = require(\"grunt-promise-q\");\n\nmodule.exports = function (grunt) {\n    asyncTask.register(grunt, \"delay\", \"delay for 100 ms\", function () {\n        return q.delay(100);\n    });   \n}; \n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n- 0.1.1 Maintenance release\n- 0.1.0 Initial preview\n",
  "readmeFilename": "README.md",
  "_id": "grunt-promise-q@0.1.1",
  "_from": "grunt-promise-q@*"
}
